{"ast":null,"code":"import { CART_ADD_ITEM, CART_REMOVE_ITEM } from \"../constants/cartConstants\";\n\nconst cartReducer = (state = {\n  cartItems: []\n}, action) => {\n  switch (action.type) {\n    case CART_ADD_ITEM:\n      const item = action.payload;\n      const product = state.cartItems.find(x => x.product === item.product);\n\n      if (product) {\n        return { ...state,\n          cartItems: state.cartItems.map(x => x.product === product ? item : x)\n        };\n      }\n\n      return {\n        cartItems: [...state.cartItems, item]\n      };\n\n    case CART_REMOVE_ITEM:\n      return {\n        cartItems: state.cartItems.filter(x => x.product !== action.payload)\n      };\n\n    default:\n      return {\n        cartItems: [...state.cartItems]\n      };\n  }\n};\n\nexport { cartReducer };","map":{"version":3,"sources":["C:/Users/SONU/Desktop/github/ecommerce/frontend/src/reducers/cartReducers.js"],"names":["CART_ADD_ITEM","CART_REMOVE_ITEM","cartReducer","state","cartItems","action","type","item","payload","product","find","x","map","filter"],"mappings":"AAAA,SAASA,aAAT,EAAwBC,gBAAxB,QAAgD,4BAAhD;;AAEA,MAAMC,WAAW,GAAG,CAACC,KAAK,GAAG;AAAEC,EAAAA,SAAS,EAAE;AAAb,CAAT,EAA4BC,MAA5B,KAAuC;AACzD,UAAQA,MAAM,CAACC,IAAf;AACE,SAAKN,aAAL;AACE,YAAMO,IAAI,GAAGF,MAAM,CAACG,OAApB;AACA,YAAMC,OAAO,GAAGN,KAAK,CAACC,SAAN,CAAgBM,IAAhB,CAAsBC,CAAD,IAAOA,CAAC,CAACF,OAAF,KAAcF,IAAI,CAACE,OAA/C,CAAhB;;AACA,UAAIA,OAAJ,EAAa;AACX,eAAO,EACL,GAAGN,KADE;AAELC,UAAAA,SAAS,EAAED,KAAK,CAACC,SAAN,CAAgBQ,GAAhB,CAAqBD,CAAD,IAC7BA,CAAC,CAACF,OAAF,KAAcA,OAAd,GAAwBF,IAAxB,GAA+BI,CADtB;AAFN,SAAP;AAMD;;AACD,aAAO;AACLP,QAAAA,SAAS,EAAE,CAAC,GAAGD,KAAK,CAACC,SAAV,EAAqBG,IAArB;AADN,OAAP;;AAGF,SAAKN,gBAAL;AACE,aAAO;AACLG,QAAAA,SAAS,EAAED,KAAK,CAACC,SAAN,CAAgBS,MAAhB,CAAwBF,CAAD,IAAOA,CAAC,CAACF,OAAF,KAAcJ,MAAM,CAACG,OAAnD;AADN,OAAP;;AAGF;AACE,aAAO;AACLJ,QAAAA,SAAS,EAAE,CAAC,GAAGD,KAAK,CAACC,SAAV;AADN,OAAP;AApBJ;AAwBD,CAzBD;;AA0BA,SAASF,WAAT","sourcesContent":["import { CART_ADD_ITEM, CART_REMOVE_ITEM } from \"../constants/cartConstants\";\r\n\r\nconst cartReducer = (state = { cartItems: [] }, action) => {\r\n  switch (action.type) {\r\n    case CART_ADD_ITEM:\r\n      const item = action.payload;\r\n      const product = state.cartItems.find((x) => x.product === item.product);\r\n      if (product) {\r\n        return {\r\n          ...state,\r\n          cartItems: state.cartItems.map((x) =>\r\n            x.product === product ? item : x\r\n          ),\r\n        };\r\n      }\r\n      return {\r\n        cartItems: [...state.cartItems, item],\r\n      };\r\n    case CART_REMOVE_ITEM:\r\n      return {\r\n        cartItems: state.cartItems.filter((x) => x.product !== action.payload),\r\n      };\r\n    default:\r\n      return {\r\n        cartItems: [...state.cartItems],\r\n      };\r\n  }\r\n};\r\nexport { cartReducer };\r\n"]},"metadata":{},"sourceType":"module"}