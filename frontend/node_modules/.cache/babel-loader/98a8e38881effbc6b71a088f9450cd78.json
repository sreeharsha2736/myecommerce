{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\SONU\\\\Desktop\\\\github\\\\ecommerce\\\\frontend\\\\src\\\\Screens\\\\CartScreen.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst CartScreen = props => {\n  _s();\n\n  const productId = props.match.param.id;\n  const qty = props.location.search ? Number(props.location.search.split(\"=\")[1]) : 1;\n  useEffect(() => {\n    if (productId) {\n      dispatch(addToCart(productId, qty));\n    }\n\n    return () => {};\n  }, []);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"pt-5\",\n      children: \"CartScreen\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n};\n\n_s(CartScreen, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n\n_c = CartScreen;\nexport default CartScreen;\n\nvar _c;\n\n$RefreshReg$(_c, \"CartScreen\");","map":{"version":3,"sources":["C:/Users/SONU/Desktop/github/ecommerce/frontend/src/Screens/CartScreen.js"],"names":["React","CartScreen","props","productId","match","param","id","qty","location","search","Number","split","useEffect","dispatch","addToCart"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;;;;AAEA,MAAMC,UAAU,GAAIC,KAAD,IAAW;AAAA;;AAC5B,QAAMC,SAAS,GAAGD,KAAK,CAACE,KAAN,CAAYC,KAAZ,CAAkBC,EAApC;AACA,QAAMC,GAAG,GAAGL,KAAK,CAACM,QAAN,CAAeC,MAAf,GACRC,MAAM,CAACR,KAAK,CAACM,QAAN,CAAeC,MAAf,CAAsBE,KAAtB,CAA4B,GAA5B,EAAiC,CAAjC,CAAD,CADE,GAER,CAFJ;AAGAC,EAAAA,SAAS,CAAC,MAAM;AACd,QAAIT,SAAJ,EAAe;AACbU,MAAAA,QAAQ,CAACC,SAAS,CAACX,SAAD,EAAYI,GAAZ,CAAV,CAAR;AACD;;AAED,WAAO,MAAM,CAAE,CAAf;AACD,GANQ,EAMN,EANM,CAAT;AAOA,sBACE;AAAA,2BACE;AAAI,MAAA,SAAS,EAAC,MAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF,mBADF;AAKD,CAjBD;;GAAMN,U;;KAAAA,U;AAmBN,eAAeA,UAAf","sourcesContent":["import React from \"react\";\r\n\r\nconst CartScreen = (props) => {\r\n  const productId = props.match.param.id;\r\n  const qty = props.location.search\r\n    ? Number(props.location.search.split(\"=\")[1])\r\n    : 1;\r\n  useEffect(() => {\r\n    if (productId) {\r\n      dispatch(addToCart(productId, qty));\r\n    }\r\n\r\n    return () => {};\r\n  }, []);\r\n  return (\r\n    <>\r\n      <h1 className=\"pt-5\">CartScreen</h1>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default CartScreen;\r\n"]},"metadata":{},"sourceType":"module"}