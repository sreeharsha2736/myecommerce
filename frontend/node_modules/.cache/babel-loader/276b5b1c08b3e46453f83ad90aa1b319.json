{"ast":null,"code":"import _regeneratorRuntime from\"C:/Users/SONU/Desktop/github/ecommerce/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"C:/Users/SONU/Desktop/github/ecommerce/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import Axios from\"axios\";import Cookies from\"js-cookie\";import{CART_ADD_ITEM,CART_REMOVE_ITEM}from\"../constants/cartConstants\";var addToCart=function addToCart(productId,qty){return/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(dispatch,getState){var _yield$Axios$get,data,_getState,cartItems;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:_context.prev=0;_context.next=3;return Axios.get(\"/products/\"+productId);case 3:_yield$Axios$get=_context.sent;data=_yield$Axios$get.data;dispatch({type:CART_ADD_ITEM,payload:{product:data.id,name:data.item,image:data.image,amount:data.amount,countInStock:data.countInStock,qty:qty}});_getState=getState(),cartItems=_getState.cart.cartItems;Cookies.set(\"cartItems\",JSON.stringify(cartItems));localStorage.set(\"cartItems\",JSON.stringify(cartItems));_context.next=13;break;case 11:_context.prev=11;_context.t0=_context[\"catch\"](0);case 13:case\"end\":return _context.stop();}}},_callee,null,[[0,11]]);}));return function(_x,_x2){return _ref.apply(this,arguments);};}();};var removeFromCart=function removeFromCart(productId){return function(dispatch,getState){dispatch({type:CART_REMOVE_ITEM,payload:productId});var _getState2=getState(),cartItems=_getState2.cart.cartItems;Cookies.set(\"cartItems\",JSON.stringify(cartItems));};};export{addToCart,removeFromCart};","map":{"version":3,"sources":["C:/Users/SONU/Desktop/github/ecommerce/frontend/src/actions/cartActions.js"],"names":["Axios","Cookies","CART_ADD_ITEM","CART_REMOVE_ITEM","addToCart","productId","qty","dispatch","getState","get","data","type","payload","product","id","name","item","image","amount","countInStock","cartItems","cart","set","JSON","stringify","localStorage","removeFromCart"],"mappings":"yUAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACA,MAAOC,CAAAA,OAAP,KAAoB,WAApB,CACA,OAASC,aAAT,CAAwBC,gBAAxB,KAAgD,4BAAhD,CACA,GAAMC,CAAAA,SAAS,CAAG,QAAZA,CAAAA,SAAY,CAACC,SAAD,CAAYC,GAAZ,iGAAoB,iBAAOC,QAAP,CAAiBC,QAAjB,sMAEXR,CAAAA,KAAK,CAACS,GAAN,CAAU,aAAeJ,SAAzB,CAFW,uCAE1BK,IAF0B,kBAE1BA,IAF0B,CAGlCH,QAAQ,CAAC,CACPI,IAAI,CAAET,aADC,CAEPU,OAAO,CAAE,CACPC,OAAO,CAAEH,IAAI,CAACI,EADP,CAEPC,IAAI,CAAEL,IAAI,CAACM,IAFJ,CAGPC,KAAK,CAAEP,IAAI,CAACO,KAHL,CAIPC,MAAM,CAAER,IAAI,CAACQ,MAJN,CAKPC,YAAY,CAAET,IAAI,CAACS,YALZ,CAMPb,GAAG,CAAHA,GANO,CAFF,CAAD,CAAR,CAHkC,UAgB9BE,QAAQ,EAhBsB,CAexBY,SAfwB,WAehCC,IAfgC,CAexBD,SAfwB,CAiBlCnB,OAAO,CAACqB,GAAR,CAAY,WAAZ,CAAyBC,IAAI,CAACC,SAAL,CAAeJ,SAAf,CAAzB,EACAK,YAAY,CAACH,GAAb,CAAiB,WAAjB,CAA8BC,IAAI,CAACC,SAAL,CAAeJ,SAAf,CAA9B,EAlBkC,sJAApB,oEAAlB,CAqBA,GAAMM,CAAAA,cAAc,CAAG,QAAjBA,CAAAA,cAAiB,CAACrB,SAAD,QAAe,UAACE,QAAD,CAAWC,QAAX,CAAwB,CAC5DD,QAAQ,CAAC,CAAEI,IAAI,CAAER,gBAAR,CAA0BS,OAAO,CAAEP,SAAnC,CAAD,CAAR,CAD4D,eAKxDG,QAAQ,EALgD,CAIlDY,SAJkD,YAI1DC,IAJ0D,CAIlDD,SAJkD,CAM5DnB,OAAO,CAACqB,GAAR,CAAY,WAAZ,CAAyBC,IAAI,CAACC,SAAL,CAAeJ,SAAf,CAAzB,EACD,CAPsB,EAAvB,CASA,OAAShB,SAAT,CAAoBsB,cAApB","sourcesContent":["import Axios from \"axios\";\r\nimport Cookies from \"js-cookie\";\r\nimport { CART_ADD_ITEM, CART_REMOVE_ITEM } from \"../constants/cartConstants\";\r\nconst addToCart = (productId, qty) => async (dispatch, getState) => {\r\n  try {\r\n    const { data } = await Axios.get(\"/products/\" + productId);\r\n    dispatch({\r\n      type: CART_ADD_ITEM,\r\n      payload: {\r\n        product: data.id,\r\n        name: data.item,\r\n        image: data.image,\r\n        amount: data.amount,\r\n        countInStock: data.countInStock,\r\n        qty,\r\n      },\r\n    });\r\n    const {\r\n      cart: { cartItems },\r\n    } = getState();\r\n    Cookies.set(\"cartItems\", JSON.stringify(cartItems));\r\n    localStorage.set(\"cartItems\", JSON.stringify(cartItems));\r\n  } catch (error) {}\r\n};\r\nconst removeFromCart = (productId) => (dispatch, getState) => {\r\n  dispatch({ type: CART_REMOVE_ITEM, payload: productId });\r\n\r\n  const {\r\n    cart: { cartItems },\r\n  } = getState();\r\n  Cookies.set(\"cartItems\", JSON.stringify(cartItems));\r\n};\r\n\r\nexport { addToCart, removeFromCart };\r\n"]},"metadata":{},"sourceType":"module"}